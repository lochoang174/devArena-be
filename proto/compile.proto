syntax = "proto3";
package compile;

service CompileService {
  // Hàm xử lý compile code với danh sách testcase
  rpc runCompile (CompileRequest) returns (stream CompileResult);
  rpc runSubmit (CompileRequest) returns (stream CompileResult);
}

message CompileRequest {
  string code = 1;              // Mã nguồn để kiểm tra
  string codeSolution = 2;      // Mã nguồn giải pháp
  repeated TestCase testcases = 3; // Danh sách các testcase
  string language =4;
}

message TestCase {
  repeated string inputs = 1;   // Mảng các input của testcase
  optional string output = 2;   // Dữ liệu đầu ra mong đợi
}

message CompileStatus {
  int32 testCaseIndex = 1;     
  bool isCorrect = 2;           
  string output = 3;            
  string outputExpect = 4;      
}

// Use `oneof` to allow multiple possible message types in the stream.
message CompileResult {
  oneof result {
    CompileStatus status = 1; // Emit a CompileStatus for each test case
    FinalResult finalResult = 2; // Emit a FinalResult once all test cases are done
    LogRunCode LogRunCode=3;
  }
}

// The final result contains status, score, and result summary
message FinalResult {
  int32 status = 1;   // HTTP-like status code (200, 400, etc.)
  double score = 2;   // Score of the submission
  string result = 3;  // Summary of results (e.g., "5/5")
  double totalRuntime=4;

}
message LogRunCode {
  int32 testCaseIndex = 1;    
  string chunk=2; 

}
